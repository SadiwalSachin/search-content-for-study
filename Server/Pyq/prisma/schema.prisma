// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PYQ {
  id           Int        @id @default(autoincrement())
  question     String
  unit         Int
  examType     ExamType
  examYear     String? // Required only if examType is "PYQ"
  midSemNumber Int? // Required only if examType is "MidSem"
  subjectCode  String
  topic        String
  image        String?
  repeated     Int        @default(0)
  marks        Int
  collegeYear  Int
  semester     Int?
  branch       Branch? // Required if collegeYear is not 1
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  solved       SolvedType @default(NOTSOLVED)
  RaisedPyq    RaisedPyq?
  solution     Solution?
}

enum SolvedType {
  NOTSOLVED
  SOLVING
  SOLVED
}

enum ExamType {
  PYQ
  MidSem
}

enum Branch {
  ECE
  EX
  CSE
  ME
  AU
  PCT
  IT
}

model RaisedPyq {
  id                String @id @default(uuid())
  pyq               PYQ    @relation(fields: [pyqId], references: [id])
  pyqId             Int    @unique
  raisedByUser_ID   String?
  raisedByUser_NAME String?
  solved            Boolean @default(false)
}

model Solution {
  id                String @id @default(uuid())
  pyq               PYQ    @relation(fields: [pyqId], references: [id])
  pyqId             Int    @unique
  solvedByUser_ID   String?
  solvedByUser_NAME String?
  solutionText      String?
  solutionImage     String?
}
